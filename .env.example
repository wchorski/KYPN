##? do i even need to set NODE_ENV? maybe just do it in dockerfiles
# NODE_ENV="development"
# NODE_ENV="production"
## macOs Apple Silicon 'linux/arm64/v8 | Linux x64 'linux/amd64'
PRODUCTION_PLATFORM='linux/arm64/v8'
IMAGE_BASE_NAME="next-keystone-aio"

## Database
## mysql postresql sqlite (if blank = sqlite)
DB_PROVIDER="postgresql"
DB_USER="admin"
DB_PASSWORD="admin"
DB_DOMAIN="localhost"
# DB_DOMAIN="db" ## docker production build
DB_PORT=5432
DB_COLLECTION="dev_collection_1"
DB_TIMEOUT=300
## this url gets built in `envs.ts`
# DATABASE_URL="postgres://admin:admin@localhost:5432/dev_collection_1?connect_timeout=300"
## chose to seed, extract, or leave database alone. 
## `seed`, `extract`, `none` or omit
SEED_EXTRACT_NONE="seed"

## Content Managment System
CMS_PROTOCAL="http"
CMS_DOMAIN="localhost" # use `cms` in prod if using nested Docker
CMS_PORT=3001

## Website Frontend
NEXT_PUBLIC_FRONTEND_URL="http://localhost:3000"
WEB_PORT=3000
NEXT_PUBLIC_SITE_TITLE="Keystone + Next + Auth"
NEXT_PUBLIC_SITE_DESCRIPTION="CMS with NextJs Frontend with cross domain authentication"
## pagination maximum
PERPAGE=20

## AUTH
BASIC_USER_ROLE_NAME="client"
## should be same as `NEXT_PUBLIC_FRONTEND_URL`
NEXTAUTH_URL="http://localhost:3000"
## `openssl rand -base64 32`
NEXTAUTH_SECRET=
## used for default passwords. omit this when pusing to production, or if you need to create a lot of dummy accounts
## `openssl rand -base64 32`
SEED_PASSWORD_SECRET=
WORK_FACTOR=13
# GITHUB_AUTH_ID=
# GITHUB_AUTH_SECRET=
# GOOGLE_AUTH_ID=
# GOOGLE_AUTH_SECRET=

## Plugins
# NEXT_PUBLIC_UMAMI_URL="https://ANALYTICS_DOMAIN"
## https://ethereal.email/ or gmail's smtp
MAIL_SERVICE="gmail"
MAIL_HOST="smtp.gmail.com"
MAIL_PORT=587
MAIL_USER=
MAIL_PASS=

## DOCKER Production Build
DATA_VOLUME="./db/data-postgres"