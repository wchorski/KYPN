// LAYOUT
// body{
//   display: flex;
//   flex-direction: column;

//   > main {
//     flex: 1;
//   }
// }

// // debug
// .siteWrapper{
//   border-left: 8px dashed yellow;
//   border-right: 8px dashed yellow;
// }

.layout--fullwidth{
  // background: blue;
  display: grid;
    
  
  grid-template-areas: 
    "banner  banner banner  banner"
    "headr   headr  headr   headr"
    "navi    navi   navi    navi"
    "main    main   main    main"
    "footer  footer footer  footer"
  ;
  grid-template-columns: 
    minmax(0, 1fr) 
    minmax(0, calc(var(--w-sitemax) / 2)) 
    minmax(0, calc(var(--w-sitemax) / 2)) 
    minmax(0, 1fr);

  align-content: flex-start;

  // // debug
  // border: dotted 1px aqua;
  // > * {
  //   border: dashed 2px red;
  // }
}



.layout--main-aside{

  > aside {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-inline: 1rem;
  }
}

@media (width > 830px) {

  .layout--main-aside{
    display: grid;
    
  
    grid-template-areas: 
      "banner  banner banner  banner"
      "headr   headr  headr   headr"
      "navi    navi   navi    navi"
      "main    main   aside   aside"
      "footer  footer footer  footer"
    ;
    grid-template-columns: 
      minmax(0, 1fr) 
      minmax(0, calc(var(--w-sitemax) / 2 + var(--w-aside))) 
      minmax(0, calc(var(--w-sitemax) /2 - var(--w-aside))) 
      minmax(0, 1fr);
    align-content: flex-start;

    // // debug
    // border: dotted 1px aqua;
    // > * {
    //   border: dashed 2px red;
    // }

    > header {
      grid-area: headr;
      grid-column: 1 / -1;
    }
  
    > nav {
      grid-area: navi;
      position: sticky;
      top: 0;
      z-index: 999;
      grid-column: 1 / -1;
    }
  
    > main, > .page-wrapper {
      grid-area: main;
      grid-column: 2 / 3;
    }
  
    > aside {
      grid-area: aside;
      grid-column: 3 / 4;
      position: sticky;
      top: 4em;
    }
  
    > footer {
      grid-area: footer;
      grid-column: 1 / -1;
    }
  }
  
}


// all layouts have

.layout {

  // todo can i catch all any future layout? "&--*" ?
  &--main-aside, &--fullwidth{
    // border: double white 10px;
    // todo do i even need row template?
    // grid-template-rows: auto 1fr auto;

    // // debug
    // > * {
    //   border: dashed pink 2px;
    // }

    .banner_wrap {
      grid-area: banner;
      grid-column: 1/-1;
      max-width: var(--w-sitemax);
      margin-inline: auto;
      width: 100%;
    }

    > header {
      grid-area: headr;
      grid-column: 1 / -1;
    }

    > nav {
      grid-area: navi;
      grid-column: 1 / -1;

      position: sticky;
      top: 0;
      z-index: 999;
    }
  
    > footer {
      grid-area: footer;
      grid-column: 1 / -1;
    }
    
  }

  &--fullwidth {
    > main, > .page-wrapper  {
      grid-area: main;
      grid-column: 1 / -1;
    }
  
  }

  &--main-aside {
    > main {
      grid-area: main;
      grid-column: 2 / 3;
    }
  
    > aside {
      grid-area: aside;
      grid-column: 3 / 4;
      position: sticky;
      top: 4em;
    }
  }
}

// SECTION NESTED GRIDS
// SECTION NESTED GRIDS
// SECTION NESTED GRIDS
.section {
  display: grid; 
  grid-column: 1/-1;
  gap: 1rem;
  align-content: flex-start;
  padding-top: 1rem;
  padding-bottom: 1rem;

  // ? maybe do this? idk
  // min-height: 50vh;
  // min-height: 50dvh;
  position: relative;
  align-content: center;

  // // debug
  // > div {
  //   border: dashed grey 1px;
  // }
  
  
}

.content_center {
  > div {
    display: grid;
    align-content: center;
    // height: 50vh;
    // height: 50dvh;
  }
}

section.grid {
  grid-template-columns: 
    minmax(0, 1fr) 
    minmax(0, calc(var(--w-sitemax) + 1rem)) 
    minmax(0, 1fr)
  ;
  
  > div {
    grid-column: 2/3;
    display: grid;
  }
}

// @media screen and (width > 829px) and (width < 1617px) {
//   section.section {
//     gap: 1rem;
//   }
// }

@media screen and (width > 650px) {
  
  section.grid._1{
  
    grid-template-columns: 
      minmax(0, 1fr) 
      minmax(0, calc(var(--w-sitemax) + 1rem)) 
      minmax(0, 1fr)
    ;
  
    > div {
      grid-column: 2/3;

      // todo could mess up document rich text
      // > ul, > li {
      //   padding-left: 1.5rem;
      // }
    }
  }

  section.grid._1_1{
  
    grid-template-columns: 
      minmax(0, 1fr) 
      minmax(0, calc(var(--w-sitemax) * 0.5 + 1rem)) 
      minmax(0, calc(var(--w-sitemax) * 0.5 + 1rem)) 
      minmax(0, 1fr)
    ;
  
    > div:first-child {
      grid-column: 2/3;
    }
    > div:last-child {
      grid-column: 3/4;
    }
  }
  
  
  section.grid._1_2 {
  
    grid-template-columns: 
      minmax(0, 1fr) 
      minmax(0, calc(var(--w-sitemax) * 0.3 + 1rem)) 
      minmax(0, calc(var(--w-sitemax) * 0.7 + 1rem)) 
      minmax(0, 1fr)
    ;
  
    > div:first-child {
      grid-column: 2/3;
    }
    > div:last-child {
      grid-column: 3/4;
    }
  }

  section.grid._1_4 {
  
    grid-template-columns: 
      minmax(0, 1fr) 
      minmax(0, calc(var(--w-sitemax) * 0.2 + 1rem)) 
      minmax(0, calc(var(--w-sitemax) * 0.8 + 1rem)) 
      minmax(0, 1fr)
    ;
  
    > div:first-child {
      grid-column: 2/3;
    }
    > div:last-child {
      grid-column: 3/4;
    }
  }
  
  .grid._2_1 {
  
    grid-template-columns: 
      minmax(0, 1fr) 
      minmax(0, calc(var(--w-sitemax) * 0.7 + 1rem)) 
      minmax(0, calc(var(--w-sitemax) * 0.3 + 1rem)) 
      minmax(0, 1fr)
    ;
  
    > div:first-child {
      grid-column: 2/3;
    }
    > div:last-child {
      grid-column: 3/4;
    }
  }
  
  section.grid._1_1_1 {  
  
    grid-template-columns: 
      minmax(0, 1fr) 
      minmax(0, calc(var(--w-sitemax) * 0.33 + 1rem)) 
      minmax(0, calc(var(--w-sitemax) * 0.33 + 1rem)) 
      minmax(0, calc(var(--w-sitemax) * 0.33 + 1rem)) 
      minmax(0, 1fr)
    ;
    // grid-template-columns: repeat(3, 1fr);
  
    > div:first-child {
      grid-column: 2/3;
    }
    > div:nth-child(2) {
      grid-column: 3/4;
    }
    > div:last-child {
      grid-column: 4/5;
    }
  }

  section.grid._1_1_1_1 {  
  
    grid-template-columns: 
      minmax(0, 1fr) 
      minmax(0, calc(var(--w-sitemax) * 0.5 + 1rem)) 
      minmax(0, calc(var(--w-sitemax) * 0.5 + 1rem)) 
      minmax(0, 1fr)
    ;
    // grid-template-columns: repeat(3, 1fr);
  
    > div:first-child {
      grid-column: 2/3;
    }
    > div:nth-child(2) {
      grid-column: 3/4;
    }
    > div:nth-child(3) {
      grid-column: 2/3;
    }
    > div:last-child {
      grid-column: 3/4;
    }
  }
  
  section.grid._1_2_1 {
  
    grid-template-columns: 
      minmax(0, 1fr) 
      minmax(0, calc(var(--w-sitemax) * 0.2 + 1rem)) 
      minmax(0, calc(var(--w-sitemax) * 0.59 + 1rem)) 
      minmax(0, calc(var(--w-sitemax) * 0.2 + 1rem)) 
      minmax(0, 1fr)
    ;
    // grid-template-columns: repeat(3, 1fr);
  
    > div:first-child {
      grid-column: 2/3;
    }
    > div:nth-child(2) {
      grid-column: 3/4;
    }
    > div:last-child {
      grid-column: 4/5;
    }
  }
}

@media screen and (width > 900px) {
  section.grid._1_1_1_1 {  
  
    grid-template-columns: 
      minmax(0, 1fr) 
      minmax(0, calc(var(--w-sitemax) * 0.25 + 1rem)) 
      minmax(0, calc(var(--w-sitemax) * 0.25 + 1rem)) 
      minmax(0, calc(var(--w-sitemax) * 0.25 + 1rem)) 
      minmax(0, calc(var(--w-sitemax) * 0.25 + 1rem)) 
      minmax(0, 1fr)
    ;
    // grid-template-columns: repeat(3, 1fr);
  
    > div:first-child {
      grid-column: 2/3;
    }
    > div:nth-child(2) {
      grid-column: 3/4;
    }
    > div:nth-child(3) {
      grid-column: 4/5;
    }
    > div:last-child {
      grid-column: 5/6;
    }
  }

}

.grid {
  display: grid;
}

.flex {
  display: flex;
  align-items: center;
}

.gap-1 {
  gap: 1rem;
}

section {
  min-height: 30vh;
}


// section.grid._1_2_1{
//   background-color: purple;
//   display: grid;
// }
