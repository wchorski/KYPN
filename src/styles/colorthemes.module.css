/* TODO add color theme for button, links, :hover, :focus, :active,  */
.theme_base {
  /* ? caused sticky nav to un-stick */
	/* display: initial; */

	& a {
		color: var(--c-primary);
	}
	& nav a {
		color: unset;
	}

	& :global(.button) {
		background-color: var(--c-primary);
		color: var(--c-txt-primary);
	}

	& button[disabled] {
		border-color: var(--c-seperator);
		background-color: var(--c-disabled);
	}
}

.bg_c_plain {
	background-color: var(--c-txt-bg);
	color: var(--c-txt);
}

.bg_c_primary :global {
	background-color: var(--c-primary);
	color: var(--c-txt-primary);
	/* & *:is(h1, h2, h3, h4, h5, h6)  */
	& h1,
	& h2,
	& h3,
	& h4,
	& h5,
	& h6 {
		color: var(--c-txt-primary-h);
	}

	& a {
		color: var(--c-header);
	}

	& :global(.button),
	& button {
		color: var(--c-primary);
		background-color: var(--c-txt-bg);
	}
}

.bg_c_secondary :global {
	background-color: var(--c-secondary);
	color: var(--c-txt-secondary-h);
	& h1,
	& h2,
	& h3,
	& h4,
	& h5,
	& h6 {
		color: var(--c-txt-secondary-h);
	}
}
.outline_c_secondary {
	background-color: var(--c-txt-bg);
	border-width: var(--space-xxs);
	border-color: var(--c-secondary);
	border-style: solid;
}
.outline_c_tertiary :global {
	background-color: var(--c-txt-bg);
	border-width: var(--space-xxs);
	border-color: var(--c-tertiary);
	border-style: solid;

	& button,
	& .button {
		color: var(--c-tertiary);
		border-color: var(--c-tertiary);
	}
}

.bg_c_tertiary :global {
	background-color: var(--c-txt-bg);
	border-width: var(--space-xxs);
	border-color: var(--c-tertiary);
	border-style: solid;

  & :is(h1, h2, h3, h4, h5, h6):first-child {
    color: var(--c-tertiary);
  }
	/* & h1,
	& h2,
	& h3,
	& h4,
	& h5,
	& h6 {
		color: var(--c-tertiary);
	} */

	& a {
		color: var(--c-tertiary);
	}

	& button,
	& :global(.button) {
		/* color: var(--c-tertiary); */
		border-color: var(--c-tertiary);
    background-color: var(--c-tertiary);
	}
}
.bg_c_accent :global {
	/* color: var(--c-accent); */
	background-color: var(--c-txt-bg);
	border-left-width: var(--space-s);
	border-left-style: solid;
	border-color: var(--c-accent);

	& h1,
	& h2,
	& h3,
	& h4,
	& h5,
	& h6 {
		color: var(--c-accent);
		text-shadow: var(--shadow-4);
	}

	& button,
	& :global(.button) {
		background-color: var(--c-primary);
		color: var(--c-txt-primary);
		border-color: var(--c-primary);
	}
}
/* //todo set colors from status.module.css to here for other components to use */

.bg_c_transparent {
	background-color: transparent;
}
.bg_c_reverse_theme :global {
	color: var(--c-txt-rev);
	background-color: var(--c-txt-bg-rev);

	& h1,
	& h2,
	& h3,
	& h4,
	& h5,
	& h6 {
		color: var(--c-txt-rev);
	}

	& a {
		color: var(--c-secondary);
	}
}

/* look in readme to make this work for real */
.c_theme_light :global {
	color-scheme: only light;
	color: darkslategrey;
	background-color: white;

	& h1,
	& h2,
	& h3,
	& h4,
	& h5,
	& h6 {
		color: black;
	}

	--c-txt-bg: whitesmoke;
	/* --c-primary: color-mix(in hsl, blue, black 1%); */
}

.gradient_accent_teriary {
	background-image: linear-gradient(
		to right,
		var(--c-accent),
		var(--c-tertiary)
	);

	color: var(--c-txt-primary-h);

	display: inline;
	background-size: 100% 10%;
	background-repeat: no-repeat;
	background-position: 0 105%;
}
