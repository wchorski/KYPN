// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model Addon {
  id                String             @id @default(cuid())
  name              String             @unique @default("")
  slug              String             @unique @default("")
  image             String             @default("")
  excerpt           String             @default("")
  price             Int
  stripeProductId   String             @default("")
  stripePriceId     String             @default("")
  status            String
  author            User?              @relation("Addon_author", fields: [authorId], references: [id])
  authorId          String?            @map("author")
  services          Service[]          @relation("Addon_services")
  products          Product[]          @relation("Addon_products")
  rentals           Rental[]           @relation("Addon_rentals")
  subscriptionPlans SubscriptionPlan[] @relation("Addon_subscriptionPlans")
  bookings          Booking[]          @relation("Addon_bookings")
  subscriptionItems SubscriptionItem[] @relation("Addon_subscriptionItems")
  categories        Category[]         @relation("Addon_categories")
  tags              Tag[]              @relation("Addon_tags")
  dateCreated       DateTime           @default(now())
  dateModified      DateTime           @default(now())

  @@index([authorId])
}

model Announcement {
  id         String    @id @default(cuid())
  link       String    @default("")
  start      DateTime?
  end        DateTime?
  colorTheme String?   @default("bg_c_plain")
  type       String?   @default("NORMAL")
  content    Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
}

model Availability {
  id           String    @id @default(cuid())
  start        DateTime
  end          DateTime
  employee     User?     @relation("Availability_employee", fields: [employeeId], references: [id])
  employeeId   String?   @map("employee")
  type         String?   @default("VACATION")
  status       String?   @default("APPROVED")
  dateCreated  DateTime? @default(now())
  dateModified DateTime? @default(now())

  @@index([employeeId])
}

model Booking {
  id                    String     @id @default(cuid())
  start                 DateTime
  end                   DateTime
  timeZone              String     @default("America/Chicago")
  address               String     @default("")
  service               Service?   @relation("Booking_service", fields: [serviceId], references: [id])
  serviceId             String?    @map("service")
  location              Location?  @relation("Booking_location", fields: [locationId], references: [id])
  locationId            String?    @map("location")
  addons                Addon[]    @relation("Addon_bookings")
  employees             User[]     @relation("Booking_employees")
  employee_requests     User[]     @relation("Booking_employee_requests")
  customer              User?      @relation("Booking_customer", fields: [customerId], references: [id])
  customerId            String?    @map("customer")
  email                 String     @default("")
  phone                 String     @default("")
  name                  String     @default("")
  status                String     @default("LEAD")
  details               Json       @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  notes                 String     @default("")
  secretNotes           String     @default("")
  revision              Int        @default(0)
  orderItem             OrderItem? @relation("Booking_orderItem", fields: [orderItemId], references: [id])
  orderItemId           String?    @unique @map("orderItem")
  dateCreated           DateTime   @default(now())
  dateModified          DateTime   @default(now())
  google                Json?
  from_CartItem_booking CartItem[] @relation("CartItem_booking")

  @@index([serviceId])
  @@index([locationId])
  @@index([customerId])
}

model CartItem {
  id           String   @id @default(cuid())
  quantity     Int      @default(1)
  type         String
  coupon       Coupon?  @relation("CartItem_coupon", fields: [couponId], references: [id])
  couponId     String?  @map("coupon")
  product      Product? @relation("CartItem_product", fields: [productId], references: [id])
  productId    String?  @map("product")
  booking      Booking? @relation("CartItem_booking", fields: [bookingId], references: [id])
  bookingId    String?  @map("booking")
  rental       Rental?  @relation("CartItem_rental", fields: [rentalId], references: [id])
  rentalId     String?  @map("rental")
  event        Event?   @relation("CartItem_event", fields: [eventId], references: [id])
  eventId      String?  @map("event")
  user         User?    @relation("CartItem_user", fields: [userId], references: [id])
  userId       String?  @map("user")
  dateCreated  DateTime @default(now())
  dateModified DateTime @default(now()) @updatedAt

  @@index([couponId])
  @@index([productId])
  @@index([bookingId])
  @@index([rentalId])
  @@index([eventId])
  @@index([userId])
}

model Category {
  id                String             @id @default(cuid())
  name              String             @unique @default("")
  excerpt           String             @default("")
  posts             Post[]             @relation("Category_posts")
  pages             Page[]             @relation("Category_pages")
  addons            Addon[]            @relation("Addon_categories")
  services          Service[]          @relation("Category_services")
  locations         Location[]         @relation("Category_locations")
  products          Product[]          @relation("Category_products")
  subscriptionPlans SubscriptionPlan[] @relation("Category_subscriptionPlans")
  events            Event[]            @relation("Category_events")
}

model Coupon {
  id                    String             @id @default(cuid())
  name                  String             @unique @default("")
  code                  String             @unique @default("")
  amount_off            Int?
  percent_off           Int?
  duration_in_months    Int?
  duration              String
  redeem_by             DateTime
  max_redemptions       Int                @default(9999)
  products              Product[]          @relation("Coupon_products")
  subscriptionPlans     SubscriptionPlan[] @relation("Coupon_subscriptionPlans")
  subscriptionItems     SubscriptionItem[] @relation("SubscriptionItem_coupon")
  events                Event[]            @relation("Coupon_events")
  services              Service[]          @relation("Coupon_services")
  dateCreated           DateTime           @default(now())
  dateModified          DateTime           @default(now()) @updatedAt
  stripeId              String             @default("")
  from_CartItem_coupon  CartItem[]         @relation("CartItem_coupon")
  from_OrderItem_coupon OrderItem[]        @relation("OrderItem_coupon")

  @@index([stripeId])
}

model Event {
  id                  String     @id @default(cuid())
  summary             String     @default("")
  start               DateTime
  end                 DateTime
  price               Int        @default(0)
  seats               Int
  image               String     @default("")
  excerpt             String     @default("")
  description         Json       @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  status              String     @default("DRAFT")
  location            Location?  @relation("Event_location", fields: [locationId], references: [id])
  locationId          String?    @map("location")
  hosts               User[]     @relation("Event_hosts")
  cohosts             User[]     @relation("Event_cohosts")
  tickets             Ticket[]   @relation("Ticket_event")
  coupons             Coupon[]   @relation("Coupon_events")
  dateCreated         DateTime   @default(now())
  dateModified        DateTime   @default(now())
  categories          Category[] @relation("Category_events")
  tags                Tag[]      @relation("Event_tags")
  from_CartItem_event CartItem[] @relation("CartItem_event")

  @@index([locationId])
}

model Location {
  id         String     @id @default(cuid())
  name       String     @unique @default("")
  image      String     @default("")
  address    String     @unique @default("")
  rooms      Int        @default(1)
  status     String?    @default("PRIVATE")
  notes      String     @default("")
  services   Service[]  @relation("Location_services")
  bookings   Booking[]  @relation("Booking_location")
  events     Event[]    @relation("Event_location")
  categories Category[] @relation("Category_locations")
  tags       Tag[]      @relation("Location_tags")
}

model Order {
  id                      String      @id @default(cuid())
  email                   String      @default("")
  notes                   String      @default("")
  fees                    Int         @default(0)
  stripeCheckoutSessionId String      @default("")
  stripePaymentIntent     String      @default("")
  shipping_address        String      @default("")
  status                  String?     @default("REQUESTED")
  items                   OrderItem[] @relation("OrderItem_order")
  user                    User?       @relation("Order_user", fields: [userId], references: [id])
  userId                  String?     @map("user")
  dateCreated             DateTime    @default(now())
  dateModified            DateTime    @default(now())

  @@index([userId])
}

model OrderItem {
  id                 String            @id @default(cuid())
  type               String
  subTotal           Int
  amount_off         Int?
  percent_off        Int?
  quantity           Int
  rentalDays         Int               @default(0)
  product            Product?          @relation("OrderItem_product", fields: [productId], references: [id])
  productId          String?           @map("product")
  booking            Booking?          @relation("Booking_orderItem")
  rental             Rental?           @relation("OrderItem_rental", fields: [rentalId], references: [id])
  rentalId           String?           @unique @map("rental")
  tickets            Ticket[]          @relation("Ticket_orderItem")
  subscriptionItem   SubscriptionItem? @relation("OrderItem_subscriptionItem", fields: [subscriptionItemId], references: [id])
  subscriptionItemId String?           @unique @map("subscriptionItem")
  coupon             Coupon?           @relation("OrderItem_coupon", fields: [couponId], references: [id])
  couponId           String?           @map("coupon")
  order              Order?            @relation("OrderItem_order", fields: [orderId], references: [id])
  orderId            String?           @map("order")
  dateCreated        DateTime          @default(now())
  dateModified       DateTime          @default(now())

  @@index([productId])
  @@index([couponId])
  @@index([orderId])
}

model Page {
  id             String     @id @default(cuid())
  title          String     @default("")
  slug           String     @unique @default("")
  dateCreated    DateTime   @default(now())
  dateModified   DateTime   @default(now())
  status         String?    @default("DRAFT")
  template       String?    @default("FULLWIDTH")
  pinned         Int?       @default(0)
  excerpt        String     @default("")
  featured_image String     @default("")
  featured_video String     @default("")
  content        Json       @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author         User?      @relation("Page_author", fields: [authorId], references: [id])
  authorId       String?    @map("author")
  privateAccess  User[]     @relation("Page_privateAccess")
  categories     Category[] @relation("Category_pages")
  tags           Tag[]      @relation("Page_tags")

  @@index([authorId])
}

model Post {
  id             String     @id @default(cuid())
  title          String     @default("")
  slug           String     @unique @default("")
  status         String?    @default("DRAFT")
  template       String?    @default("FULLWIDTH")
  pinned         Int?       @default(0)
  excerpt        String     @default("")
  featured_image String     @default("")
  featured_video String     @default("")
  content        Json       @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author         User?      @relation("Post_author", fields: [authorId], references: [id])
  authorId       String?    @map("author")
  privateAccess  User[]     @relation("Post_privateAccess")
  categories     Category[] @relation("Category_posts")
  tags           Tag[]      @relation("Post_tags")
  dateCreated    DateTime   @default(now())
  dateModified   DateTime   @default(now())

  @@index([authorId])
}

model Product {
  id                    String      @id @default(cuid())
  image                 String      @default("")
  name                  String      @unique @default("")
  slug                  String      @unique @default("")
  excerpt               String      @default("")
  description           Json        @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  status                String      @default("DRAFT")
  isForSale             Boolean     @default(true)
  price                 Int
  isForRent             Boolean     @default(false)
  rental_price          Int
  stockCount            Int
  author                User?       @relation("Product_author", fields: [authorId], references: [id])
  authorId              String?     @map("author")
  addons                Addon[]     @relation("Addon_products")
  coupons               Coupon[]    @relation("Coupon_products")
  dateCreated           DateTime    @default(now())
  dateModified          DateTime    @default(now())
  categories            Category[]  @relation("Category_products")
  tags                  Tag[]       @relation("Product_tags")
  stripeProductId       String      @default("")
  stripePriceId         String      @default("")
  orderItems            OrderItem[] @relation("OrderItem_product")
  from_CartItem_product CartItem[]  @relation("CartItem_product")

  @@index([authorId])
  @@index([stripeProductId])
  @@index([stripePriceId])
}

model Rental {
  id                   String     @id @default(cuid())
  start                DateTime
  end                  DateTime
  timeZone             String     @default("America/Chicago")
  address              String     @default("")
  delivery             Boolean    @default(false)
  price                Int?       @default(0)
  email                String     @default("")
  phone                String     @default("")
  name                 String     @default("")
  notes                String     @default("")
  orderItem            OrderItem? @relation("OrderItem_rental")
  addons               Addon[]    @relation("Addon_rentals")
  customer             User?      @relation("Rental_customer", fields: [customerId], references: [id])
  customerId           String?    @map("customer")
  status               String     @default("LEAD")
  dateCreated          DateTime?  @default(now())
  dateModified         DateTime?  @default(now())
  google               Json?      @default("{\"id\":\"\",\"status\":\"\",\"kind\":\"\",\"htmlLink\":\"\"}")
  from_CartItem_rental CartItem[] @relation("CartItem_rental")

  @@index([customerId])
}

model Role {
  id                         String  @id @default(cuid())
  name                       String  @unique @default("")
  label                      String  @unique @default("")
  description                String  @default("")
  canViewUsers               Boolean @default(false)
  canManageUsers             Boolean @default(false)
  canManageRoles             Boolean @default(false)
  canManagePages             Boolean @default(false)
  canManagePosts             Boolean @default(false)
  canCreatePosts             Boolean @default(false)
  canManageAnnouncements     Boolean @default(false)
  canManageProducts          Boolean @default(false)
  canViewProducts            Boolean @default(false)
  canManageAddons            Boolean @default(false)
  canManageBookings          Boolean @default(false)
  canManageEvents            Boolean @default(false)
  canManageTickets           Boolean @default(false)
  canManageCart              Boolean @default(false)
  canManageOrders            Boolean @default(false)
  canManageServices          Boolean @default(false)
  canManageSubscriptionPlans Boolean @default(false)
  canManageSubscriptionItems Boolean @default(false)
  canManageCoupons           Boolean @default(false)
  canManageRentals           Boolean @default(false)
  canManageAvailability      Boolean @default(false)
  canCreateAvailability      Boolean @default(false)
  canManageLocations         Boolean @default(false)
  canViewPrivateLocations    Boolean @default(false)
  canManageCategories        Boolean @default(false)
  canManageTags              Boolean @default(false)
  assignedTo                 User[]  @relation("User_role")
}

model Service {
  id                 String     @id @default(cuid())
  name               String     @unique @default("")
  image              String     @default("")
  excerpt            String     @default("")
  description        Json       @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  price              Int        @default(0)
  durationInHours    Decimal    @default("6") @postgresql.Decimal(5, 2)
  buisnessHourOpen   String?    @default("09:00:00")
  buisnessHourClosed String?    @default("18:00:00")
  buisnessDays       Json       @default("[0,1,2,3,4,5,6]")
  status             String     @default("DRAFT")
  addons             Addon[]    @relation("Addon_services")
  employees          User[]     @relation("Service_employees")
  locations          Location[] @relation("Location_services")
  bookings           Booking[]  @relation("Booking_service")
  coupons            Coupon[]   @relation("Coupon_services")
  author             User?      @relation("Service_author", fields: [authorId], references: [id])
  authorId           String?    @map("author")
  stripeProductId    String     @default("")
  stripePriceId      String     @default("")
  categories         Category[] @relation("Category_services")
  tags               Tag[]      @relation("Service_tags")
  dateCreated        DateTime   @default(now())
  dateModified       DateTime   @default(now())

  @@index([authorId])
}

model SubscriptionItem {
  id                       String            @id @default(cuid())
  custom_price             Int?
  subscriptionPlan         SubscriptionPlan? @relation("SubscriptionItem_subscriptionPlan", fields: [subscriptionPlanId], references: [id])
  subscriptionPlanId       String?           @map("subscriptionPlan")
  isActive                 Boolean           @default(true)
  isDelinquent             Boolean           @default(false)
  trial_end                DateTime?
  status                   String            @default("REQUESTED")
  billing_interval         String
  notes                    String            @default("")
  addons                   Addon[]           @relation("Addon_subscriptionItems")
  user                     User?             @relation("SubscriptionItem_user", fields: [userId], references: [id])
  userId                   String?           @map("user")
  stripeSubscriptionId     String            @unique @default("")
  stripeSubscriptionItemId String            @unique @default("")
  dateCreated              DateTime          @default(now())
  dateModified             DateTime          @default(now())
  orderItem                OrderItem?        @relation("OrderItem_subscriptionItem")
  coupon                   Coupon?           @relation("SubscriptionItem_coupon", fields: [couponId], references: [id])
  couponId                 String?           @map("coupon")

  @@index([subscriptionPlanId])
  @@index([userId])
  @@index([couponId])
}

model SubscriptionPlan {
  id                String             @id @default(cuid())
  image             String             @default("")
  author            User?              @relation("SubscriptionPlan_author", fields: [authorId], references: [id])
  authorId          String?            @map("author")
  name              String             @default("")
  slug              String             @unique @default("")
  excerpt           String             @default("")
  description       Json               @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  status            String             @default("DRAFT")
  price             Int
  billing_interval  String             @default("month")
  trial_period_days Int                @default(1)
  stockMax          Int
  addons            Addon[]            @relation("Addon_subscriptionPlans")
  coupons           Coupon[]           @relation("Coupon_subscriptionPlans")
  items             SubscriptionItem[] @relation("SubscriptionItem_subscriptionPlan")
  dateCreated       DateTime           @default(now())
  dateModified      DateTime           @default(now())
  categories        Category[]         @relation("Category_subscriptionPlans")
  tags              Tag[]              @relation("SubscriptionPlan_tags")
  stripeProductId   String             @unique @default("")
  stripePriceId     String             @unique @default("")

  @@index([authorId])
}

model Tag {
  id                String             @id @default(cuid())
  name              String             @unique @default("")
  posts             Post[]             @relation("Post_tags")
  pages             Page[]             @relation("Page_tags")
  addons            Addon[]            @relation("Addon_tags")
  services          Service[]          @relation("Service_tags")
  locations         Location[]         @relation("Location_tags")
  products          Product[]          @relation("Product_tags")
  subscriptionPlans SubscriptionPlan[] @relation("SubscriptionPlan_tags")
  events            Event[]            @relation("Event_tags")
}

model Ticket {
  id           String     @id @default(cuid())
  email        String     @default("")
  status       String     @default("PENDING")
  event        Event?     @relation("Ticket_event", fields: [eventId], references: [id])
  eventId      String?    @map("event")
  holder       User?      @relation("Ticket_holder", fields: [holderId], references: [id])
  holderId     String?    @map("holder")
  dateCreated  DateTime?  @default(now())
  dateModified DateTime?  @default(now())
  orderItem    OrderItem? @relation("Ticket_orderItem", fields: [orderItemId], references: [id])
  orderItemId  String?    @map("orderItem")

  @@index([eventId])
  @@index([holderId])
  @@index([orderItemId])
}

model User {
  id                 String             @id @default(cuid())
  name               String             @default("")
  nameLast           String             @default("")
  authId             String             @unique @default("")
  image              String             @default("")
  phone              String             @default("")
  email              String             @unique @default("")
  password           String             @default("")
  url                String             @default("")
  isActive           Boolean            @default(true)
  stripeCustomerId   String             @default("")
  dateCreated        DateTime           @default(now())
  dateModified       DateTime?          @default(now()) @updatedAt
  buisnessHourOpen   String?            @default("09:00:00")
  buisnessHourClosed String?            @default("18:00:00")
  role               Role?              @relation("User_role", fields: [roleId], references: [id])
  roleId             String?            @map("role")
  posts              Post[]             @relation("Post_author")
  pages              Page[]             @relation("Page_author")
  privatePagesAccess Page[]             @relation("Page_privateAccess")
  privatePostsAccess Post[]             @relation("Post_privateAccess")
  servicesProvided   Service[]          @relation("Service_employees")
  servicesAuthored   Service[]          @relation("Service_author")
  bookings           Booking[]          @relation("Booking_customer")
  gigs               Booking[]          @relation("Booking_employees")
  gig_requests       Booking[]          @relation("Booking_employee_requests")
  eventsHost         Event[]            @relation("Event_hosts")
  eventsCohost       Event[]            @relation("Event_cohosts")
  availability       Availability[]     @relation("Availability_employee")
  cart               CartItem[]         @relation("CartItem_user")
  products           Product[]          @relation("Product_author")
  addons             Addon[]            @relation("Addon_author")
  rentals            Rental[]           @relation("Rental_customer")
  subscriptionPlans  SubscriptionPlan[] @relation("SubscriptionPlan_author")
  subscriptions      SubscriptionItem[] @relation("SubscriptionItem_user")
  orders             Order[]            @relation("Order_user")
  tickets            Ticket[]           @relation("Ticket_holder")

  @@index([stripeCustomerId])
  @@index([roleId])
}
