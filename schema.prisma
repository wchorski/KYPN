// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               String    @id @default(cuid())
  name             String    @default("")
  nameLast         String    @default("")
  authId           String    @unique @default("")
  image            String    @default("")
  phone            String    @default("")
  email            String    @unique @default("")
  password         String    @default("")
  url              String    @default("")
  isAdmin          Boolean   @default(false)
  isActive         Boolean   @default(true)
  stripeCustomerId String    @default("")
  dateCreated      DateTime? @default(now())
  dateModified     DateTime? @default(now())
  isVerified       Boolean   @default(false)
  role             Role?     @relation("User_role", fields: [roleId], references: [id])
  roleId           String?   @map("role")
  posts            Post[]    @relation("Post_author")
  pages            Page[]    @relation("Page_author")

  @@index([stripeCustomerId])
  @@index([roleId])
}

model Role {
  id                  String  @id @default(cuid())
  name                String  @unique @default("")
  label               String  @unique @default("")
  canSeeOtherUsers    Boolean @default(false)
  canManageUsers      Boolean @default(false)
  canManageRoles      Boolean @default(false)
  canManagePages      Boolean @default(false)
  canManagePosts      Boolean @default(false)
  canManageCategories Boolean @default(false)
  canManageTags       Boolean @default(false)
  assignedTo          User[]  @relation("User_role")
}

model Post {
  id             String     @id @default(cuid())
  title          String     @default("")
  slug           String     @unique @default("")
  dateCreated    DateTime?  @default(now())
  dateModified   DateTime?  @default(now())
  status         String?    @default("DRAFT")
  template       String?    @default("FULLWIDTH")
  pinned         Int?       @default(0)
  excerpt        String     @default("")
  featured_image String     @default("")
  featured_video String     @default("")
  content        Json       @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author         User?      @relation("Post_author", fields: [authorId], references: [id])
  authorId       String?    @map("author")
  categories     Category[] @relation("Category_posts")
  tags           Tag[]      @relation("Post_tags")

  @@index([authorId])
}

model Page {
  id             String     @id @default(cuid())
  title          String     @default("")
  slug           String     @unique @default("")
  dateCreated    DateTime?  @default(now())
  dateModified   DateTime?  @default(now())
  status         String?    @default("DRAFT")
  template       String?    @default("FULLWIDTH")
  pinned         Int?       @default(0)
  excerpt        String     @default("")
  featured_image String     @default("")
  featured_video String     @default("")
  content        Json       @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author         User?      @relation("Page_author", fields: [authorId], references: [id])
  authorId       String?    @map("author")
  categories     Category[] @relation("Category_pages")
  tags           Tag[]      @relation("Page_tags")

  @@index([authorId])
}

model Category {
  id      String @id @default(cuid())
  name    String @unique @default("")
  excerpt String @default("")
  posts   Post[] @relation("Category_posts")
  pages   Page[] @relation("Category_pages")
}

model Tag {
  id    String @id @default(cuid())
  name  String @unique @default("")
  posts Post[] @relation("Post_tags")
  pages Page[] @relation("Page_tags")
}
